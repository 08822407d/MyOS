;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;启动扇区的任务很简单，读取loader到内存
;MBR最后按标准预留了4个分区表的空间，宏定义在bootrc.inc文件中
;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

[BITS   16]
%include    "bootrc.inc"
;---------------------------------------------------------------------------
jmp RM_Seg_boot:bootstart
nop
;==================================================================================================
;一些显示信息用的字符串
Msg1        db      "Booting..."
MsgsEnd:
Len_Msg1    EQU     MsgsEnd    -   Msg1

;---------------------------------------------------------------------------
Loader_DAP:
    db  0x10                            ;调用者设置为0x10
    db  0                               ;保留，必须为0
    dw  FileSize_loader                 ;要读取的扇区数
    dw  0                               ;目标内存偏移地址
    dw  RM_base_loader                  ;目标内存段地址
    dd  0x0001                          ;目标数据的LBA号低32位
    dd  0                               ;目标数据的LBA号高32位

;==================================================================================================
;引导扇区代码主体
bootstart:
;清屏
    mov ax,0x0600
    mov bx,0x0700
    mov cx,0
    mov dx,0x184f
    int 0x10
;初始化寄存器
    mov ax,cs
    mov ds,ax
    mov es,ax
    mov ax,RM_Seg_SysInfo
    mov fs,ax
    mov ax,RM_base_stack
    mov ss,ax
    mov sp,0xCFFF
;显示“Booting...”
    mov cx,Len_Msg1
    mov bp,Msg1
    mov dx,0
    call str_print
    add dh,0x01
    mov [fs:0],dx

;读loader到0x90000
    call read_loader
;控制移交给loader
    jmp RM_base_loader:0
;==================================================================================================
;一些函数
;---------------------------------------------------------------------------
;利用BIOS INT0x10显示一个字符串
;调用者设置CX（字符串长度）、ES：BP（字符串地址）、DX（DH行号，DL列号）
str_print:
    mov ax,0x1301
    mov bx,0x0007                       ;0页，白底黑字
    int 0x10
    ret
;---------------------------------------------------------------------------
;INT0x13扩展读硬盘扇区，
read_loader:
    mov ah,0x42                         ;int0x13 ah=0x42扩展读存储器
    mov dl,0x80                         ;dl=0x80 存储器编号0x80第一个硬盘
    mov si,Loader_DAP
.l0:
    int 0x13
    jc .l0
    ret
;==================================================================================================
;四个硬盘分区表
times 0x01BE - ($ - $$) db 0
MBRPE1: MBRPE
MBRPE2: MBRPE
MBRPE3: MBRPE
MBRPE4: MBRPE
        dw 0xAA55
